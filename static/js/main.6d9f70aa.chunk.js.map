{"version":3,"sources":["assets/img/logo.png","assets/img/spinner.gif","components/ui/Header.js","components/characters/CharacterItem.js","components/characters/CharacterGrid.js","utils/setupLazyLoadingImages.js","App.js","hooks/useFetch.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","CharacterItem","item","data-src","img","name","portrayed","nickname","birthday","status","CharacterGrid","isLoading","items","React","useEffect","imageSelector","onVisible","onLoad","images","document","querySelectorAll","length","window","hasOwnProperty","console","info","forEach","image","setAttribute","dataset","imagesObserver","IntersectionObserver","entries","observer","filter","entry","isIntersecting","target","addEventListener","removeEventListener","classList","remove","unobserve","observe","setupLazyLoadingImages","closest","spinner","map","key","char_id","App","url","init","useState","data","setData","loading","setLoading","error","setError","prevInit","useRef","prevUrl","current","fetch","then","res","ok","json","catch","err","finally","useFetch","API_BASE_URL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d9f70aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3795f66d.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";","import React from 'react';\n\nimport logo from '../../assets/img/logo.png';\n\nconst Header = () => {\n  return (\n    <header className=\"center\">\n      <img src={logo} alt=\"\" />\n    </header>\n  )\n};\n\nexport default Header;\n","import React from 'react';\n\nconst CharacterItem = ({ item }) => {\n  return (\n    <div className=\"card card-loading\">\n      <div className=\"card-inner\">\n        <div className=\"card-front\">\n          <img data-src={item.img} alt={item.name} className=\"lazy \" />\n        </div>\n\n        <div className=\"card-back\">\n          <h1>{item.name}</h1>\n          <ul>\n            <li>\n              <strong>Actor Name:</strong>\n              <span>{item.portrayed}</span>\n            </li>\n\n            <li>\n              <strong>Nickname:</strong>\n              <span>{item.nickname}</span>\n            </li>\n\n            <li>\n              <strong>Birthday:</strong>\n              <span>{item.birthday}</span>\n            </li>\n\n            <li>\n              <strong>Status:</strong>\n              <span>{item.status}</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default CharacterItem;\n","import React from 'react';\nimport CharacterItem from './CharacterItem';\n\nimport spinner from '../../assets/img/spinner.gif';\nimport setupLazyLoadingImages from '../../utils/setupLazyLoadingImages';\nconst CharacterGrid = ({ isLoading, items }) => {\n  React.useEffect(() => {\n    if (isLoading) {\n      return;\n    }\n\n    setupLazyLoadingImages('.lazy', null, (img) => {\n      img.closest('.card').classList.remove('card-loading');\n    });\n\n  }, [isLoading]);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <img src={spinner} alt=\"Loading\" />\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"cards\">\n      {items.map((item) =>\n        <CharacterItem key={item.char_id} item={item} />\n      )}\n    </section>\n  );\n};\n\nexport default CharacterGrid;\n","export default function setupLazyLoadingImages(imageSelector, onVisible = null, onLoad = null) {\n  const images = document.querySelectorAll(imageSelector);\n\n  if (!images.length) {\n    return;\n  }\n\n  if (!window.hasOwnProperty(\"IntersectionObserver\")) {\n    console.info(\"Lazy loading not supported\");\n\n    return images.forEach((image) => {\n      image.setAttribute('src', image.dataset.src);\n      onVisible && onVisible(image);\n      onLoad && onLoad(image);\n    });\n  }\n\n  const imagesObserver = new IntersectionObserver((entries, observer) => {\n    entries\n      .filter(entry => entry.isIntersecting)\n      .forEach(entry => {\n        const image = entry.target;\n        \n        image.addEventListener('load', () => {\n          onLoad && onLoad(image);\n          image.removeEventListener('load', null);\n        });\n\n        onVisible && onVisible(image);\n\n        image.setAttribute('src', image.dataset.src);\n        image.classList.remove('lazy');\n\n        observer.unobserve(image);\n      });\n  });\n\n  images.forEach((image) => {\n    imagesObserver.observe(image);\n  });\n}","import React from 'react';\n\nimport './App.css';\nimport Header from './components/ui/Header';\nimport CharacterGrid from './components/characters/CharacterGrid';\nimport { useFetch } from './hooks/useFetch';\n\nconst API_BASE_URL = 'https://www.breakingbadapi.com/api';\n\nconst App = () => {\n  const {\n    data: items,\n    loading,\n    error\n  } = useFetch(API_BASE_URL + '/characters');\n\n  return (\n    <div className=\"App container\">\n      <Header />\n      {error && <p className=\"text-highlight\">Oops...</p>}\n      <CharacterGrid isLoading={loading} items={items} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nexport function useFetch(url, init) {\n  const [data, setData] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n\n  const prevInit = React.useRef();\n  const prevUrl = React.useRef();\n  React.useEffect(() => {\n    if (prevUrl.current === url && prevInit.current === init) {\n      return;\n    }\n\n    prevUrl.current = url;\n    prevInit.current = init;\n\n    fetch(url, init)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        setError(res);\n      })\n      .then(data => setData(data))\n      .catch(err => {\n        console.error(err);\n        setError(err)\n      })\n      .finally(() => setLoading(false));\n  }, [init, url]);\n\n  return { data, loading, error }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}